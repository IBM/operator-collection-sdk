name: Release

on:
  push:
    tags:
      - "**"

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Determine tag
        run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"

      - name: Create release
        uses: actions/github-script@v6
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                draft: false,
                generate_release_notes: true,
                name: process.env.RELEASE_TAG,
                owner: context.repo.owner,
                prerelease: false,
                repo: context.repo.repo,
                tag_name: process.env.RELEASE_TAG,
              });

              core.exportVariable('RELEASE_ID', response.data.id);
              core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
            } catch (error) {
              core.setFailed(error.message);
            }

  publish:
      name: Publish
      needs: release
      runs-on: ubuntu-latest

      steps:
        - name: Determine tag
          run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"

        - name: Check-out repository
          uses: actions/checkout@v3
          with:
            fetch-depth: 0
            ref: ${{ env.RELEASE_TAG }}

        - name: Install Python Requirements
          uses: actions/setup-python@v4
          with:
            python-version: '3.10'
            cache: 'pip'

        - name: Install Ansible
          run: pip install ansible

        - name: Build Collection
          run: |
            ansible-galaxy collection build ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk -f --output-path ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/local/builds
            echo "COLLECTION_BUILD=$(ls ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/local/builds)" >> $GITHUB_ENV
            echo "COLLECTION_BUILD_LOCATION=${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/local/builds/$(ls ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/local/builds)" >> $GITHUB_ENV
  
        - name: Upload Collection to GitHub
          run: |
            gh release upload ${RELEASE_TAG} ${COLLECTION_BUILD_LOCATION}
          env:
            GITHUB_TOKEN: ${{ github.TOKEN }}

        - name: Login to ICR
          uses: docker/login-action@v2
          with:
            registry: ${{ vars.ICR_NAMESPACE }}
            username: ${{ secrets.ICR_USERNAME }}
            password: ${{ secrets.ICR_APIKEY }}

        - name: Build and push
          uses: docker/build-push-action@v4
          with:
            push: true
            tags: |
              ${{ vars.ICR_NAMESPACE }}/operator-collection-sdk:${{ env.RELEASE_TAG }}
              ${{ vars.ICR_NAMESPACE }}/operator-collection-sdk:latest

        # - name: Publish Collection to Ansible Galaxy
        #   run: ansible-galaxy collection publish -vvvv --api-key ${GALAXY_API_KEY} ${COLLECTION_BUILD_LOCATION}
        #   env:
        #     GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

