# Execute Molecule Tests

name: Test

on:
  workflow_dispatch:
    inputs:
      openshift_server_url:
        type: string
        required: true
        description: Enter the Openshift URL
      openshift_token:
        type: string
        required: true
        description: Enter your Openshift Login Token
# on:
#   push:
#     branches:
#       - '**'
#     paths-ignore:
#       - 'docs/**'
#       - '**.md'
#     tags-ignore:
#       - '**'
#   pull_request:
#     branches:    
#       - main
#       - develop

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Masking inputs
        run: |
          secret1=${{ github.event.inputs.openshift_token }}
          echo "::add-mask::$secret1"
          echo "OPENSHIFT_TOKEN=$secret1" >> "$GITHUB_OUTPUT"
          secret2=${{ github.event.inputs.openshift_server_url }}
          echo "::add-mask::$secret2"
          echo "OPENSHIFT_SERVER=$secret2" >> "$GITHUB_OUTPUT"

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install Python Requirements
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Perform PIP installs
        run: pip install ansible-lint==6.16.0

      - name: Run ansible-lint
        run: |
          ansible-galaxy collection install --force -r ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/requirements.yml
          ansible-lint --config-file ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/.ansible-lint  --project-dir ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/playbooks/ --exclude ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/playbooks/molecule/

  test:
    name: Test
    needs: lint
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Masking inputs
        id: set-secrets
        run: |
          secret1=${{ github.event.inputs.openshift_token }}
          echo "::add-mask::$secret1"
          echo "OPENSHIFT_TOKEN=$secret1" >> "$GITHUB_OUTPUT"
          secret2=${{ github.event.inputs.openshift_server_url }}
          echo "::add-mask::$secret2"
          echo "OPENSHIFT_SERVER=$secret2" >> "$GITHUB_OUTPUT"

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install Python Requirements
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Perform PIP installs
        run: pip install -r ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/requirements.txt
      
      - name: Install oc cli
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: latest

      - name: Log into OCP
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ steps.set-secrets.outputs.OPENSHIFT_SERVER }}
          openshift_token: ${{ steps.set-secrets.outputs.OPENSHIFT_TOKEN }}

      - name: Execute Molecule Tests
        run: |
          cd ${GITHUB_WORKSPACE}/ibm/operator_collection_sdk/playbooks
          export ANSIBLE_PYTHON_INTERPRETER="$(which python)"
          OCP_NAMESPACE=molecule-${GITHUB_REF_NAME}-${RUNNER_OS} molecule test --all
        env:
            OPENSHIFT_SERVER: ${{ steps.set-secrets.outputs.OPENSHIFT_SERVER }}
            OPENSHIFT_TOKEN: ${{ steps.set-secrets.outputs.OPENSHIFT_TOKEN }}