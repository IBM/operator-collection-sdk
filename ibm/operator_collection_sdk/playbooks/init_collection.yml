#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
- name: Initialize Operator Collection
  hosts: localhost
  connection: local
  gather_facts: false
  vars_prompt:
    - name: collection_name
      prompt: Enter your Ansible Collection name
      private: false
    - name: collection_namespace
      prompt: Enter your Ansible Collection namespace
      private: false
    - name: offline_install
      prompt: Will this collection be executed in an offline environment [y/n]
      default: "n"
      private: false

  tasks:
    - name: Set local directory
      ansible.builtin.set_fact:
        local_directory: "{{ lookup('env', 'PWD') if filepath is undefined else filepath }}"

    - name: Validate ansible-galaxy CLI installation
      ansible.builtin.command: ansible-galaxy --version
      register: ansible_galaxy_output
      ignore_errors: true

    - name: Fail if ansible-galaxy CLI isn't installed
      ansible.builtin.fail:
        msg: zoscb-encrypt CLI not installed. SubOperatorConfig will be generated using the 'personal' credential type
      when: ansible_galaxy_output.rc != 0

    - name: Set base directory
      ansible.builtin.set_fact:
        base_dir: "{{ local_directory }}/{{ collection_namespace  | lower | replace('-', '_') }}/{{ collection_name | lower | replace('-', '_') }}"

    - name: Set facts
      ansible.builtin.set_fact:
        collections_dir: "{{ base_dir }}/collections/"
        requirements_yml: "{{ base_dir }}/collections/requirements.yml"
        requirements_yaml: "{{ base_dir }}/collections/requirements.yml"
        extensions_json: "{{ base_dir }}/.vscode/extensions.json"

    - name: Initialize collection
      ansible.builtin.command: ansible-galaxy collection init {{ collection_namespace | lower | replace('-', '_') }}.{{ collection_name | lower | replace('-', '_') }} --init-path {{ local_directory }}
      failed_when:
        - result.rc == 1
        - '"already exists" in result.stderr'

    - name: Create playbooks directory
      ansible.builtin.file:
        path: "{{ base_dir }}/playbooks/roles"
        state: directory
        mode: '0755'

    - name: Create vars directory
      ansible.builtin.file:
        path: "{{ base_dir }}/playbooks/vars"
        state: directory
        mode: '0755'

    - name: Create initial vars file
      ansible.builtin.template:
        src: templates/vars.j2
        dest: "{{ base_dir }}/playbooks/vars/my_vars.yml"
        mode: '0644'

    - name: Create initial playbook file
      ansible.builtin.template:
        src: templates/playbook.j2
        dest: "{{ base_dir }}/playbooks/playbook.yml"
        mode: '0644'

    - name: Remove roles directory
      ansible.builtin.file:
        path: "{{ base_dir }}/roles"
        state: absent
        mode: '0755'

    - name: Create collections directory
      ansible.builtin.file:
        path: "{{ base_dir }}/collections"
        state: directory
        mode: '0755'

    - name: Generate requirements.yml file
      ansible.builtin.template:
        src: templates/requirements-yml.j2
        dest: "{{ requirements_yml }}"
        mode: '0644'

    - name: Create operator-config.yml
      ansible.builtin.include_role:
        name: create_operator_config
      vars:
        path: "{{ base_dir }}"

    - name: Create vscode directory
      ansible.builtin.file:
        path: "{{ base_dir }}/.vscode"
        state: directory
        mode: '0755'

    - name: Create extensions.json file
      ansible.builtin.template:
        src: templates/extensions-json.j2
        dest: "{{ extensions_json }}"
        mode: '0644'

    - name: Download local dependencies
      ansible.builtin.command: ansible-galaxy collection download -r "{{ base_dir }}/collections/requirements.yml" -p "{{ base_dir}}/collections"
      register: ansible_galaxy_download_output
      when: offline_install == "y"
      ignore_errors: true

    - name: Ansible Galaxy dependency download status
      ansible.builtin.fail:
        msg: |
          Unable to download dependent collections from Ansible Galaxy. Please download the collections listed in the {{ base_dir }}/collections/requirements.yml file and store in the {{ collections_dir }} directory.
          After the collections are downloaded, execute the "create_offline_requirements.yml" playbook to complete the setup
      when: offline_install == "y" and ansible_galaxy_download_output.rc != 0
