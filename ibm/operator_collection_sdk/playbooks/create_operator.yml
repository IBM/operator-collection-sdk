#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
- name: Create Operator
  hosts: localhost
  connection: local
  gather_facts: false
  vars_prompt:
    - name: zosendpoint_name
      prompt: Enter your ZosEndpoint name
      private: false
    - name: zosendpoint_host
      prompt: Enter your ZosEndpoint host
      private: false
    - name: zosendpoint_port
      prompt: Enter your ZosEndpoint port
      default: "22"
      private: false
    - name: username
      prompt: Enter your SSH Username for this endpoint (Press Enter to skip if the zoscb-encrypt CLI isn't installed)
      private: false
    - name: ssh_key
      prompt: Enter the path to your private SSH Key for this endpoint (Press Enter to skip if the zoscb-encrypt CLI isn't installed)
      private: false
    - name: passphrase
      prompt: Enter the passphrase for the SSH Key for this endpoint (Press Enter to skip if the zoscb-encrypt CLI isn't installed)
      private: true

  tasks:
    - name: Set local directory
      ansible.builtin.set_fact:
        local_directory: "{{ lookup('env', 'PWD') if filepath is undefined else filepath }}"

    - name: Prereq Validation
      ansible.builtin.include_role:
        name: pre_check
      vars:
        path: "{{ local_directory }}"

    - name: Build Collection
      ansible.builtin.include_role:
        name: build_collection
      vars:
        path: "{{ local_directory }}"

    - name: Upload collection to manager pod
      ansible.builtin.include_role:
        name: upload_collection_to_manager
      vars:
        path: "{{ local_directory }}"
        namespace: "{{ target_namespace }}"

    - name: Set OperatorCollection name
      ansible.builtin.set_fact:
        operatorcollection_name: "{{ operator_name + '.' + operator_domain + '.' + operator_version }}"

    - name: Set Credential name
      ansible.builtin.set_fact:
        credential_name: "{{ zosendpoint_name }}-credential"
      when: encrypt_cli_available is true

    - name: Create ZosEndpoint
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: ZosEndpoint
          metadata:
            name: "{{ zosendpoint_name }}"
            namespace: "{{ target_namespace }}"
          spec:
            host: "{{ zosendpoint_host }}"
            port: "{{ zosendpoint_port | int }}"
        validate_certs: false

    - name: Create OperatorCollection
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: OperatorCollection
          metadata:
            name: "{{ operatorcollection_name }}"
            namespace: "{{ target_namespace }}"
            labels:
              managed-by: ibm-zos-cloud-broker
              operator-domain: "{{ operator_domain }}"
              operator-name: "{{ operator_name }}"
              operator-version: "{{ operator_version }}"
          spec:
            skipSignatureVerification: true
        validate_certs: false

    - name: Validate OperatorCollection installed successfully
      kubernetes.core.k8s_info:
        api_version: zoscb.ibm.com/v2beta2
        kind: OperatorCollection
        name: "{{ operatorcollection_name }}"
        namespace: "{{ target_namespace }}"
        validate_certs: false
      register: oc_results
      until: "oc_results.resources[0].status.phase is defined and oc_results.resources[0].status.phase == 'Successful'"
      retries: 5
      delay: 5

    - name: Create SSH Credential Secret
      ansible.builtin.command: zoscb-encrypt credential-secret -n "{{ credential_name }}" -u "{{ username }}" -s "{{ ssh_key }}"
      when: encrypt_cli_available is true and username != "" and ssh_key != "" and passphrase == ""

    - name: Create SSH Credential Secret with passphrase
      ansible.builtin.shell: |
        export PASSPHRASE="{{ passphrase }}"
        zoscb-encrypt credential-secret -n "{{ credential_name }}" -u "{{ username }}" -s "{{ ssh_key }}" -p
        unset PASSPHRASE
      when: encrypt_cli_available is true and username != "" and ssh_key != "" and passphrase != ""

    - name: Create SubOperatorConfig without mapped credential
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: SubOperatorConfig
          metadata:
            name: "{{ operatorcollection_name }}-soc"
            namespace: "{{ target_namespace }}"
          spec:
            credentialType: personal
            mapping:
              - namespace: "{{ target_namespace }}"
                zosendpoints:
                  - name: "{{ zosendpoint_name }}"
            operatorCollection: "{{ operatorcollection_name }}"
        validate_certs: false
      when: encrypt_cli_available is false or (username == "" and ssh_key == "")

    - name: Create SubOperatorConfig with mapped credential
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: SubOperatorConfig
          metadata:
            name: "{{ operatorcollection_name }}-soc"
            namespace: "{{ target_namespace }}"
          spec:
            credentialType: shared
            mapping:
              - namespace: "{{ target_namespace }}"
                zosendpoints:
                  - name: "{{ zosendpoint_name }}"
                    credentialName: "{{ credential_name }}"
            operatorCollection: "{{ operatorcollection_name }}"
        validate_certs: false
      when: encrypt_cli_available is true and username != "" and ssh_key != ""

    - name: Validate SubOperatorConfig installed successfully
      kubernetes.core.k8s_info:
        api_version: zoscb.ibm.com/v2beta2
        kind: SubOperatorConfig
        name: "{{ operatorcollection_name }}-soc"
        namespace: "{{ target_namespace }}"
        validate_certs: false
      register: soc_results
      until: "soc_results.resources[0].status.phase is defined and soc_results.resources[0].status.phase == 'Successful'"
      retries: 30
      delay: 5
      ignore_errors: true
      no_log: true

    - name: SubOperatorConfig installation status notification
      ansible.builtin.debug:
        msg: "Suboperator failed to install successfully after max retry attempts. Please check OCP for installation status"
      when: "soc_results.resources[0].status.phase is not defined or soc_results.resources[0].status.phase != 'Successful'"
