#
# Copyright 2023 IBM Inc. All rights reserved
# SPDX-License-Identifier: Apache2.0
#

---
- name: Create Operator
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Set local directory
      ansible.builtin.set_fact:
        local_directory: "{{ lookup('env', 'PWD') if filepath is undefined else filepath }}"

    - name: Locate ocsdk-extra-vars.yml (if it exists)
      ansible.builtin.find:
        paths: "{{ local_directory }}"
        patterns: 'ocsdk-extra-vars.yml,ocsdk-extra-vars.yaml'
      register: ocsdk_vars_results

    - name: Include ocsdk-extra-vars.yml variables
      when: ocsdk_vars_results.files | length > 0
      ansible.builtin.include_vars: "{{ ocsdk_vars_results.files[0].path }}"

    - name: Set Remote ZosEndpoint Type information
      ansible.builtin.pause:
        prompt: "Enter what type (local/remote) of ZosEndpoint you want to create "
      when: zosendpoint_type is not defined
      register: zosendpoint_type_input

    - name: Set endpoint type value
      when: zosendpoint_type is not defined
      ansible.builtin.set_fact:
        zosendpoint_type: "{{ zosendpoint_type_input.user_input }}"

    - name: Set ZosEndpoint Name information
      ansible.builtin.pause:
        prompt: "Enter your ZosEndpoint name "
      when: zosendpoint_name is not defined
      register: zosendpoint_name_input

    - name: Set endpoint name value
      when: zosendpoint_name is not defined
      ansible.builtin.set_fact:
        zosendpoint_name: "{{ zosendpoint_name_input.user_input }}"

    - name: Set Remote ZosEndpoint Host information
      ansible.builtin.pause:
        prompt: "Enter your ZosEndpoint host "
      when: zosendpoint_type == "remote" and zosendpoint_host is not defined
      register: zosendpoint_host_input

    - name: Set endpoint host value
      when: zosendpoint_type == "remote" and zosendpoint_host is not defined
      ansible.builtin.set_fact:
        zosendpoint_host: "{{ zosendpoint_host_input.user_input }}"

    - name: Set Remote ZosEndpoint Port information
      ansible.builtin.pause:
        prompt: "Enter your ZosEndpoint port "
      when: zosendpoint_type == "remote" and zosendpoint_port is not defined
      register: zosendpoint_port_input

    - name: Set endpoint port value
      when: zosendpoint_type == "remote" and zosendpoint_port is not defined
      ansible.builtin.set_fact:
        zosendpoint_port: "{{ zosendpoint_port_input.user_input | int }}"

    - name: Init facts
      ansible.builtin.set_fact:
        username:
        ssh_key:
        passphrase:
      when: zosendpoint_type == "local" and ocsdk_vars_results.files | length == 0

    - name: Set Remote ZosEndpoint Username information
      ansible.builtin.pause:
        prompt: "Enter your SSH Username for this endpoint (Press Enter to skip if the zoscb-encrypt CLI isn't installed) "
      when: zosendpoint_type == "remote" and username is not defined
      register: zosendpoint_username

    - name: Set username
      when: zosendpoint_type == "remote" and username is not defined
      ansible.builtin.set_fact:
        username: "{{ zosendpoint_username.user_input }}"

    - name: Set Remote ZosEndpoint SSH information
      ansible.builtin.pause:
        prompt: "Enter the path to your private SSH Key for this endpoint (Press Enter to skip if the zoscb-encrypt CLI isn't installed) "
      when: zosendpoint_type == "remote" and ssh_key is not defined
      register: zosendpoint_ssh_key

    - name: Set ssh key
      when: zosendpoint_type == "remote" and ssh_key is not defined
      ansible.builtin.set_fact:
        ssh_key: "{{ zosendpoint_ssh_key.user_input }}"
        private: false

    - name: Set Remote ZosEndpoint Passphrase information
      ansible.builtin.pause:
        prompt: "Enter the passphrase for the SSH Key for this endpoint (Press Enter to skip if the zoscb-encrypt CLI isn't installed) "
      when: zosendpoint_type == "remote" and passphrase is not defined
      register: zosendpoint_passphrase

    - name: Set passphrase
      when: zosendpoint_type == "remote" and passphrase is not defined
      ansible.builtin.set_fact:
        passphrase: "{{ zosendpoint_passphrase.user_input }}"
        private: true

    - name: Prereq Validation
      ansible.builtin.include_role:
        name: pre_check
      vars:
        path: "{{ local_directory }}"

    - name: Build Collection
      ansible.builtin.include_role:
        name: build_collection
      vars:
        path: "{{ local_directory }}"

    - name: Upload collection to manager pod
      ansible.builtin.include_role:
        name: upload_collection_to_manager
      vars:
        path: "{{ local_directory }}"
        namespace: "{{ target_namespace }}"

    - name: Set OperatorCollection name
      ansible.builtin.set_fact:
        operatorcollection_name: "{{ operator_name + '.' + operator_domain + '.' + operator_version }}"

    - name: Set Credential name
      ansible.builtin.set_fact:
        credential_name: "{{ zosendpoint_name }}-credential"
      when: encrypt_cli_available is true

    - name: Set Endpoint spec
      ansible.builtin.set_fact:
        spec: |
          {% if zosendpoint_type == "local" %}
          endpointType: "{{ zosendpoint_type}}"
          {% else %}
          endpointType: "{{ zosendpoint_type}}"
          host: "{{ zosendpoint_host }}"
          port: {{zosendpoint_port | int }}
          {% endif %}

    - name: Create ZosEndpoint
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: ZosEndpoint
          metadata:
            name: "{{ zosendpoint_name }}"
            namespace: "{{ target_namespace }}"
          spec: "{{spec | from_yaml}}"
    - name: Create Remote ZosEndpoint
      oc_zosendpoint: 
        name: "testing-rem"
        namespace: "{{ target_namespace }}"
        port: "{{zosendpoint_port}}"
        host: "{{ zosendpoint_host}}"
        endpointType: "{{ zosendpoint_type}}"
        state: "present"
      when: zosendpoint_type == "remote" and zosendpoint_port is defined and zosendpoint_port is defined
      register: testout
    - name: Create Local ZosEndpoint
      oc_zosendpoint:  #oc_zosendpoint
        name: "testing"
        namespace: "{{ target_namespace }}"
        endpointType: "{{ zosendpoint_type}}"
        state: "present"
      when: zosendpoint_type == "local"
      register: testout
    - name: dump test output
      debug:
        msg: '{{ testout }}'

    - name: Create OperatorCollection
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: OperatorCollection
          metadata:
            name: "{{ operatorcollection_name }}"
            namespace: "{{ target_namespace }}"
            labels:
              managed-by: ibm-zos-cloud-broker
              operator-domain: "{{ operator_domain }}"
              operator-name: "{{ operator_name }}"
              operator-version: "{{ operator_version }}"
          spec:
            skipSignatureVerification: true

    - name: Validate OperatorCollection installed successfully
      kubernetes.core.k8s_info:
        api_version: zoscb.ibm.com/v2beta2
        kind: OperatorCollection
        name: "{{ operatorcollection_name }}"
        namespace: "{{ target_namespace }}"
      register: oc_results
      until: "oc_results.resources[0].status.phase is defined and oc_results.resources[0].status.phase == 'Successful'"
      retries: 5
      delay: 5

    - name: Create SSH Credential Secret
      ansible.builtin.command: zoscb-encrypt credential-secret -n "{{ credential_name }}" -u "{{ username }}" -s "{{ ssh_key }}"
      when: encrypt_cli_available is true and username != None and ssh_key != None and passphrase == None

    - name: Create SSH Credential Secret with passphrase
      ansible.builtin.shell: |
        export PASSPHRASE="{{ passphrase }}"
        zoscb-encrypt credential-secret -n "{{ credential_name }}" -u "{{ username }}" -s "{{ ssh_key }}" -p
        unset PASSPHRASE
      when: encrypt_cli_available is true and username != None and ssh_key != None and passphrase != None and zosendpoint_type == "remote"

    - name: Create SubOperatorConfig without mapped credential
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: SubOperatorConfig
          metadata:
            name: "{{ operatorcollection_name }}-soc"
            namespace: "{{ target_namespace }}"
          spec:
            credentialType: personal
            mapping:
              - namespace: "{{ target_namespace }}"
                zosendpoints:
                  - name: "{{ zosendpoint_name }}"
            operatorCollection: "{{ operatorcollection_name }}"
      when: encrypt_cli_available is false or (username == "" and ssh_key == "") and zosendpoint_type == "remote"

    - name: Create SubOperatorConfig without mapped credential for local endpoint type
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: SubOperatorConfig
          metadata:
            name: "{{ operatorcollection_name }}-soc"
            namespace: "{{ target_namespace }}"
          spec:
            credentialType: shared
            mapping:
              - namespace: "{{ target_namespace }}"
                zosendpoints:
                  - name: "{{ zosendpoint_name }}"
            operatorCollection: "{{ operatorcollection_name }}"
      when: zosendpoint_type == "local"

    - name: Create SubOperatorConfig with mapped credential
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: zoscb.ibm.com/v2beta2
          kind: SubOperatorConfig
          metadata:
            name: "{{ operatorcollection_name }}-soc"
            namespace: "{{ target_namespace }}"
          spec:
            credentialType: shared
            mapping:
              - namespace: "{{ target_namespace }}"
                zosendpoints:
                  - name: "{{ zosendpoint_name }}"
                    credentialName: "{{ credential_name }}"
            operatorCollection: "{{ operatorcollection_name }}"
      when: encrypt_cli_available is true and username != "" and ssh_key != "" and zosendpoint_type == "remote"

    - name: Validate SubOperatorConfig installed successfully
      kubernetes.core.k8s_info:
        api_version: zoscb.ibm.com/v2beta2
        kind: SubOperatorConfig
        name: "{{ operatorcollection_name }}-soc"
        namespace: "{{ target_namespace }}"
      register: soc_results
      until: "soc_results.resources[0].status.phase is defined and soc_results.resources[0].status.phase == 'Successful'"
      retries: 30
      delay: 5
      ignore_errors: true
      no_log: true

    - name: SubOperatorConfig installation status notification
      ansible.builtin.debug:
        msg: "Suboperator failed to install successfully after max retry attempts. Please check OCP for installation status"
      when: "soc_results.resources[0].status.phase is not defined or soc_results.resources[0].status.phase != 'Successful'"
