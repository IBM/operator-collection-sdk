---
# Setting the "path" var
- name: Set local directory
  ansible.builtin.set_fact:
    path: "{{ lookup('env', 'PWD') if filepath is undefined else filepath }}"
  when: path is undefined

# Setting the "target_namespace" var
- name: Get namespace
  ansible.builtin.command: oc config view --minify -o 'jsonpath={..namespace}'
  register: namespace_output
  when: target_namespace is undefined

- name: Set namespace variable
  ansible.builtin.set_fact:
    target_namespace: "{{ namespace_output.stdout if ocpnamespace is undefined else ocpnamespace }}"
  when: target_namespace is undefined

# Setting the "operator_name" and "operator_version" vars
- name: Locate operator-config.yml file
  ansible.builtin.find:
    paths: "{{ path }}"
    patterns: 'operator-config.yml,operator-config.yaml'
  register: oc_file_results
  when: operator_name is undefined or operator_version is undefined

- name: Verify operator-config.yml file exists in path
  ansible.builtin.fail:
    msg: "Missing required variables \"operator_name\" and \"operator_version\". Variables must be supplied because the current path does not contain an operator-config.yml file. Path: {{ path }}"
  when: >
    oc_file_results.files | length == 0 
    and operator_name is undefined 
    or operator_version is undefined

- name: Read operator-config.yml
  ansible.builtin.set_fact:
    operator_config: "{{ lookup('template', '{{ oc_file_results.files[0].path }}')| from_yaml | to_json | from_json }}"
  when: operator_name is undefined or operator_version is undefined

- name: Set operator variables
  ansible.builtin.set_fact:
    operator_name: "{{ operator_config.name | lower }}"
    operator_version: "{{ operator_config.version }}"
  when: operator_name is undefined or operator_version is undefined

